import subprocess
import os
import tempfile
import shutil
import shlex

DOCS = 'docs/source'
EXCLUDE = ['.buildinfo']


def run(command, capture_out=True, show_err=False):

    output = subprocess.PIPE if capture_out else None
    err = subprocess.DEVNULL if capture_out else None

    with subprocess.Popen(shlex.split(command), stdout=output,
            stderr=err, universal_newlines=True) as proc:

        out = proc.stdout.read() if capture_out else ''
        ret = proc.poll()

    return out.strip(), ret


def get_remote():
    out, ret = run('git remote -v')
    if ret != 0:
        raise Exception('Not a git repository!')

    for line in out.splitlines():
        if 'push' in line and 'git@github.com' in line:
            return line.split()[1]

    raise Exception('No github remote found!')


def push_to_gh_pages(remote, doc_path):
    run('git clone {} -b gh-pages tmp_repo'.format(remote), False)
    os.chdir('tmp_repo')
    out, ret = run('git show-ref --verify --quiet refs/heads/gh-pages')

    if ret != 0:  # gh-pages doesn't exists
        run('git checkout --orphan gh-pages')

    run('git rm -rf .')
    run('touch .nojekyll')
    for f in os.listdir(doc_path):
        if f not in EXCLUDE:
            shutil.move(os.path.join(doc_path,f), '.')

    run('git add -A', False)
    run('git commit -m "Autogenerated github-pages"', False)
    run('git push origin gh-pages', False)

    os.chdir('..')



if __name__ == '__main__':
    remote = get_remote()
    cwd = os.getcwd()
    with tempfile.TemporaryDirectory(prefix='git') as tmp:

        shutil.copytree(os.getcwd(), os.path.join(tmp, 'copy'), ignore=shutil.ignore_patterns('.*'))

        doc_path = os.path.join(tmp, 'html')
        run('sphinx-build -W -b html -d {} {} {}'.
                format(os.path.join(tmp, 'doctrees'),
                       os.path.join(tmp, 'copy', DOCS),
                       doc_path), False)
        os.chdir(tmp)

        os.chdir(tmp)
        push_to_gh_pages(remote, doc_path)
